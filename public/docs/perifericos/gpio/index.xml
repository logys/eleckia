<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GPIO on Blog sobre sistemas embebidos</title>
    <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/</link>
    <description>Recent content in GPIO on Blog sobre sistemas embebidos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-mx</language>
    <lastBuildDate>Fri, 22 May 2020 07:49:50 +0000</lastBuildDate><atom:link href="https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Display Siete Segmentos VI.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-vii-display-siete-segmentos/</link>
      <pubDate>Fri, 22 May 2020 07:49:50 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-vii-display-siete-segmentos/</guid>
      <description>La función setNumber puede ser mejorada, antes de ello quiero hacer una modificación de diseño, el módulo display7 hace varias cosas, configura los puertos, convierte de decimal a la colección adecuada de pines de salida y finalmente escribe las salidas a los puertos, este último par de acciones en nuestra implementación se realizan en la misma función setNumber, se recomienda que las funciones sean responsables de una sola acción bien definida.</description>
    </item>
    
    <item>
      <title>Display Siete Segmentos V.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-vi-display-siete-segmentos/</link>
      <pubDate>Thu, 21 May 2020 06:09:36 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-vi-display-siete-segmentos/</guid>
      <description>Continuamos refactorizando el código para evitar repeticiones y ganar legibilidad, retomando.
//display7.c #include&amp;quot;display7.h&amp;quot; #include&amp;lt;avr/io.h&amp;gt; #define led\_A (1&amp;lt;&amp;lt;PD2) #define led\_B (1&amp;lt;&amp;lt;PD3) #define led\_C (1&amp;lt;&amp;lt;PD4) #define led\_D (1&amp;lt;&amp;lt;PD5) #define led\_E (1&amp;lt;&amp;lt;PD6) #define led\_F (1&amp;lt;&amp;lt;PD7) #define led\_G (1&amp;lt;&amp;lt;PB2) static void pinoutAsOutputs(void) { //pinout como salidas DDRB |= led\_G; DDRD |= led\_A|led\_B|led\_C| led\_D|led\_E|led\_F; } static void pinoutLevelLow(void) { //pinout nivel bajo PORTB &amp;amp;= ~led\_G; PORTD &amp;amp;= ~(led\_A|led\_B|led\_C| led\_D|led\_E|led\_F); } static void pinoutAsInputs(void) { //pinout como entradas DDRB &amp;amp;= ~led\_G; DDRD &amp;amp;= ~(led\_A|led\_B|led\_C| led\_D|led\_E|led\_F); } void display7\_init(void) { pinoutAsOutputs(); pinoutLevelLow(); } void display7\_destroy(void) { pinoutAsInputs(); pinoutLevelLow(); } void display7\_setNumber(short number) { if(number == 0){ PORTB &amp;amp;= ~led\_G; //LED G apagado PORTD |= led\_A|led\_B|led\_C| led\_D|led\_E|led\_F; }else if(number == 1){ PORTB &amp;amp;= ~led\_G; PORTD &amp;amp;= ~(led\_A| led\_D|led\_E|led\_F); PORTD |= led\_B|led\_C;//LED B y C encendido } //.</description>
    </item>
    
    <item>
      <title>Display Siete Segmentos IV.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-v-display-siete-segmentos/</link>
      <pubDate>Sat, 16 May 2020 22:06:49 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-v-display-siete-segmentos/</guid>
      <description>Nuestro trabajo consiste en implementar las funciones del módulo contamos con un par de funciones, una para iniciar y otra para cerrar el módulo y una tercera para establecer el número, la interfaz es muy sencilla y para nuestro propósito es más que suficiente.
La mayor parte del trabajo recae en la tercer función y la dejamos para el final. Es muy común que los módulos contengan dos funciones, init y close o create y destroy, el trabajo de estas dos funciones es llevar al módulo a un estado conocido y liberar los recursos respectivamente.</description>
    </item>
    
    <item>
      <title>Display Siete Segmentos III.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-iv-display-siete-segmentos/</link>
      <pubDate>Mon, 11 May 2020 04:53:21 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-iv-display-siete-segmentos/</guid>
      <description>No se si ya lo había mencionado pero odio el entorno de desarrollo de arduino, en esta ocasión por la forma tan pobre de manejar ficheros. Continuando la entrada anterior, vamos a mover nuestro módulo en un par de archivos, creamos dos ficheros cuyo nombre deje en claro que hay escrito en él, un buen nombre es display7,
$touch display7.c $touch display7.h ahora en nuestro entorno de desarrollo incluimos los dos ficheros, para ello vamos al menú Programa-&amp;gt;Añadir fichero y añadimos ambos ficheros, ambos aparecerán en nuestro entorno de desarrollo y podrán ser editados desde el mismo, movemos el módulo a los nuevos ficheros, los prototipos van en él .</description>
    </item>
    
    <item>
      <title>Display Siete Segmentos II.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-iii-display-siete-segmentos/</link>
      <pubDate>Sun, 10 May 2020 07:57:36 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-iii-display-siete-segmentos/</guid>
      <description>Nuestro anterior programa sirve para dos cosas, para nada y para la basura, no hay ninguna diferencia con respecto a conectar los pines del display directamente a Vcc, requerimos funcionalidad, que el microcontrolador haga lo adecuado para mostrar el número que nosotros indiquemos y que nosotros hagamos el mínimo trabajo para indicarlo, algo similar a
setNumber(3); //Muestra el número 3 en el display de esta forma podemos realizar una secuencia de números</description>
    </item>
    
    <item>
      <title>Display Siete Segmentos I.</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-ii-display-siete-segmentos/</link>
      <pubDate>Wed, 19 Jun 2019 04:37:56 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio-ii-display-siete-segmentos/</guid>
      <description>Escribamos un programa simple que nos muestre un número en un display de 7 segmentos, el circuito es el siguiente,
Conexión Arduino-Display
Contamos con un display de cátodo común por lo tanto cada segmento se enciende con un voltaje alto, es decir para encender el segmento &amp;ldquo;A&amp;rdquo; debemos configurar el pin digital D2 en alto. Evitamos la conexión en los pines D0 y D1, debido a que estos están conectados al convertidor serial-usb, y pueden provocar problemas para subir el código a la tarjeta.</description>
    </item>
    
    <item>
      <title>Periféricos atmega328p.- Puertos de entrada/salida de propósito general (GPIO)</title>
      <link>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio/</link>
      <pubDate>Thu, 13 Jun 2019 19:18:09 +0000</pubDate>
      
      <guid>https://delightful-sea-0ab343910.azurestaticapps.net/docs/perifericos/gpio/perifericos-atmega328p-puertos-de-entrada-salida-de-proposito-general-gpio/</guid>
      <description>Puertos de entrada/salida de propósito general. #  Cando pensamos en programar microcontroladores, lo que queremos es hacer que el mundo se mueva, controlar un motor, un relevador, una lampara, altavoz, etc. Para ello los microcontroladores cuentan con una serie de periféricos. A grandes rasgos un periférico puede definirse como: una interfaz que permite al microcontrolador comunicarse con el exterior, en esta entrada describiremos los puertos de entrada/salida de propósito general; GPIOx.</description>
    </item>
    
  </channel>
</rss>
