<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>funciones on Blog sobre sistemas embebidos</title>
    <link>https://logys.github.io/eleckia/tags/funciones/</link>
    <description>Recent content in funciones on Blog sobre sistemas embebidos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-mx</language>
    <lastBuildDate>Sun, 07 Jul 2019 20:09:49 +0000</lastBuildDate><atom:link href="https://logys.github.io/eleckia/tags/funciones/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Funciones</title>
      <link>https://logys.github.io/eleckia/docs/avr/funciones/</link>
      <pubDate>Sun, 07 Jul 2019 20:09:49 +0000</pubDate>
      
      <guid>https://logys.github.io/eleckia/docs/avr/funciones/</guid>
      <description>Funciones en C #  Las funciones son características fundamentales de cualquier lenguaje de programación, inclusive existe un paradigma de programación llamado programación funcional, veamos brevemente como funcionan las funciones en C. Una función tiene la siguiente sintaxis en C,
tipo_de_retorno nombre_de_funcion(tipo_dato argumento_n) { ... hacer_tareas ... return un_objeto_del_tipo_de_retorno; } Las funciones son usadas como una forma de separar o estratificar tareas, pueden recibir &amp;ldquo;n&amp;rdquo; cantidad de argumentos y pueden retornar o no un valor, un ejemplo sencillo, definimos la función suma,</description>
    </item>
    
  </channel>
</rss>
