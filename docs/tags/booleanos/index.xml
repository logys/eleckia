<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>booleanos on Blog sobre sistemas embebidos</title>
    <link>https://logys.github.io/eleckia/tags/booleanos/</link>
    <description>Recent content in booleanos on Blog sobre sistemas embebidos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-mx</language>
    <lastBuildDate>Tue, 09 Jul 2019 09:06:50 +0000</lastBuildDate><atom:link href="https://logys.github.io/eleckia/tags/booleanos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Control de flujo (if, while, for)</title>
      <link>https://logys.github.io/eleckia/docs/avr/control_flujo/</link>
      <pubDate>Tue, 09 Jul 2019 09:06:50 +0000</pubDate>
      
      <guid>https://logys.github.io/eleckia/docs/avr/control_flujo/</guid>
      <description>Control de flujo #  El control de flujo es el pilar de la programación estructurada, a pesar de que el paradigma de la programación estructurada pueda considerarse anticuada para algunos, lo cierto es que la solución de los algoritmos siempre requiere control de flujo; condicionales y repeticiones, antes de adentrarnos en el tema, revisemos el tipo de dato booleano.
Tipo de dato Booleano #  Otro tipo de datos básico es el tipo booleano, aunque por raro que parezca en C, no existía este tipo de dato originalmente, actualmente se requiere incluir la biblioteca;</description>
    </item>
    
  </channel>
</rss>
